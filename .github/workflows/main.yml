# Nombre descriptivo del flujo de trabajo
name: Gestor de Clientes

# Eventos que disparan este flujo de trabajo
on:
  # Se ejecuta cuando alguien hace push al repositorio
  push:
    branches: [ main ]
  # Se ejecuta cuando alguien crea una pull request
  pull_request:
    branches: [ main ]
  # Permite ejecutar manualmente desde la interfaz de GitHub
  workflow_dispatch:

# Trabajos que ejecutará este flujo de trabajo
jobs:
  # Nombre del trabajo
  test:
    # Sistema operativo donde se ejecutará
    runs-on: ubuntu-latest
    
    # Pasos a ejecutar en secuencia
    steps:
    # Paso 1: Obtener una copia del código del repositorio
    - name: Obtener código del repositorio
      uses: actions/checkout@v3
    
    # Paso 2: Verificar la estructura de archivos (útil para depuración)
    - name: Listar archivos del repositorio
      run: |
        echo "Listando archivos en el directorio actual:"
        ls -la
    
    # Paso 3: Configurar Python en el ambiente de ejecución
    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Versión de Python a usar
    
    # Paso 4: Ejecutar la función de listar clientes (primera prueba)
    - name: Probar listado de clientes
      run: |
        python gestor_clientes.py listar
    
    # Paso 5: Crear un cliente de prueba
    - name: Crear cliente de prueba
      run: |
        python gestor_clientes.py crear "ClientePrueba" "Av. Ejemplo 123" "555-1234" "TV Básico"
    
    # Paso 6: Verificar que el cliente se creó correctamente
    - name: Verificar cliente creado
      run: |
        python gestor_clientes.py ver "ClientePrueba"
    
    # Paso 7: Agregar un servicio adicional al cliente
    - name: Agregar servicio al cliente
      run: |
        python gestor_clientes.py agregar "ClientePrueba" "Internet 100MB"
    
    # Paso 8: Verificar que el servicio se agregó correctamente
    - name: Verificar servicio agregado
      run: |
        python gestor_clientes.py ver "ClientePrueba"
    
    # Paso 9: Listar clientes nuevamente para ver el cliente añadido
    - name: Listar clientes actualizados
      run: |
        python gestor_clientes.py listar
